{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","setTabIndex","setMenu","setMobileOptions","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","options","querySelectorAll","Array","from","forEach","option","selected","document","createElement","selectedOption","querySelector","value","textContent","classList","add","insertBefore","firstChild","menu","style","transform","children","child","fallbackOption","attributes","attr","name","parentNode","removeChild","appendChild","cloneNode","cancelButton","remove","removeAttribute","mobileOptions","append","body","_this2","open","addEventListener","event","key","_this3","concat","target","setSelectedOption","close","_this4","contains","esc","keyCode","isOpened","viewValue","setViewValue","console","error","text","childNodes","lastSelected","type","focusedOption","focus","select","stopPropagation","clickOutside","tagName","setValue","HTMLElement","window","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setTabIndex()\n    this.setMenu()\n    this.setMobileOptions()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    // this.setArrowEvents()\n    this.setCloseEvents()\n    return self\n  }\n\n  setTabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n    const options = this.querySelectorAll('option')\n\n    Array\n      .from(options)\n      .forEach(option => option.setAttribute('tabindex', '0'))\n  }\n\n  setSelected() {\n    const selected = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]') || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      selected.textContent = selectedOption.textContent\n    }\n    this.insertBefore(selected, this.firstChild)\n  }\n\n  set value(value) {\n    this.setValue(value)\n    const target = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n\n    if (target) {\n      this.setSelectedOption(target)\n    }\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-14px, -8px)'\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        const fallbackOption = document.createElement('div')\n        fallbackOption.classList.add('mn-select-option')\n        fallbackOption.textContent = child.textContent\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => fallbackOption.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(fallbackOption)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n  }\n\n  setMobileOptions() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-mobile-options')\n    menu.classList.remove('mn-card')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobileOptions = options\n    options.append(menu)\n    options.append(cancelButton)\n\n    document.body.append(options)\n  }\n\n  setOpenEvents() {\n    const open = this.open\n    this.addEventListener('click', open)\n    this.addEventListener('keyup', event => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        this.open(event)\n      }\n    })\n  }\n\n  // setArrowEvents() {\n  //   this.addEventListener('keyup', event => {\n  //     const keyIsArrowUpOrDown = event.key === 'ArrowUp' || event.key === 'ArrowDown'\n\n  //     if (keyIsArrowUpOrDown) {\n  //       this.open(event)\n  //     }\n  //   })\n\n  //   const options = this.querySelectorAll('.mn-select-option')\n\n  //   Array\n  //     .from(options)\n  //     .forEach(option => option.addEventListener('keyup', event => {\n  //       if (event.key === 'ArrowDown') {\n  //         event.target.previousElementSibling.focus()\n  //       } else if (event.key === 'ArrowDown') {\n  //         event.target.nextElementSibling.focus()\n  //       }\n  //     }))\n  // }\n\n  setOptionEvents() {\n    const options = this.querySelectorAll('.mn-select-option')\n    const mobileOptions = Array.from(this.mobileOptions.querySelectorAll('.mn-select-option'))\n\n    Array\n      .from(options)\n      .concat(mobileOptions)\n      .forEach(option => option.addEventListener('click', event => {\n        const value = event.target.getAttribute('value') || event.target.textContent\n        this.setSelectedOption(event.target)\n        this.value = value\n        this.close()\n      }))\n  }\n\n  setCloseEvents() {\n    this.mobileOptions.querySelector('button').addEventListener('click', () => this.close())\n    this.mobileOptions.addEventListener('touchend', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    this.mobileOptions.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    document.body.addEventListener('click', this.close)\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-select-visible')\n\n      if (esc && isOpened) {\n        this.close()\n      }\n    })\n  }\n\n  setValue(value) {\n    const option = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n    const viewValue = option\n      ? option.textContent\n      : null\n\n    if (viewValue) {\n      this.setViewValue(viewValue)\n      this.classList.add('has-value')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n  }\n\n  setViewValue(text) {\n    this.childNodes[0].textContent = text\n  }\n\n  setSelectedOption(target) {\n    // const value = target.value || target.textContent\n    // target.parentNode.setAttribute('value', value)\n    const lastSelected = target.parentNode.querySelector('.mn-select-option[selected]')\n\n    if (lastSelected) {\n      lastSelected.removeAttribute('selected')\n    }\n    target.setAttribute('selected', 'selected')\n  }\n\n  open(event) {\n    if (event && event.target.classList.contains('.mn-select-option')) {\n      return false\n    }\n    this.classList.add('visible')\n    this.mobileOptions.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n\n    if (event && event.type === 'keyup') {\n      const focusedOption = this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option:first-child')\n      focusedOption.focus()\n    }\n  }\n\n  close(event) {\n    const select = document.querySelector('mn-select.visible')\n    if (event && select) {\n      event.stopPropagation()\n      const clickOutside = event.target.tagName === 'BODY'\n        || event.target.classList.contains('mn-mobile-options')\n        || event.target.classList.contains('mn-select-option')\n\n      if (clickOutside && select) {\n        document.body.classList.remove('mn-select-visible')\n        select.classList.remove('visible')\n        select.mobileOptions.classList.remove('visible')\n      }\n    } else if (select) {\n      document.body.classList.remove('mn-select-visible')\n      select.classList.remove('visible')\n      select.mobileOptions.classList.remove('visible')\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}