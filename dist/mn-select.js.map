{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","setMenu","setMobileOptions","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","_possibleConstructorReturn","selected","document","createElement","selectedOption","getAttribute","querySelector","classList","add","textContent","insertBefore","firstChild","menu","style","transform","Array","from","children","forEach","child","fallbackOption","attributes","attr","setAttribute","name","value","parentNode","removeChild","appendChild","options","cloneNode","cancelButton","remove","removeAttribute","mobileOptions","append","body","open","addEventListener","_this2","querySelectorAll","concat","option","event","setSelectedOption","target","setValue","close","_this3","contains","esc","keyCode","isOpened","viewValue","setViewValue","console","error","text","childNodes","lastSelected","select","stopPropagation","clickOutside","tagName","HTMLElement","window","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setMenu()\n    this.setMobileOptions()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    return self\n  }\n\n  setSelected() {\n    const selected = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]') || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      this.classList.add('has-value')\n      selected.textContent = selectedOption.textContent\n    }\n    this.insertBefore(selected, this.firstChild)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-14px, -8px)'\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        const fallbackOption = document.createElement('div')\n        fallbackOption.classList.add('mn-select-option')\n        fallbackOption.textContent = child.textContent\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => fallbackOption.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(fallbackOption)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n  }\n\n  setMobileOptions() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-mobile-options')\n    menu.classList.remove('mn-card')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobileOptions = options\n    options.append(menu)\n    options.append(cancelButton)\n\n    document.body.append(options)\n  }\n\n  setOpenEvents() {\n    const open = this.open\n    this.addEventListener('click', open)\n  }\n\n  setOptionEvents() {\n    const options = this.querySelectorAll('.mn-select-option')\n    const mobileOptions = Array.from(this.mobileOptions.querySelectorAll('.mn-select-option'))\n\n    Array\n      .from(options)\n      .concat(mobileOptions)\n      .forEach(option => option.addEventListener('click', event => {\n        this.setSelectedOption(event.target)\n        this.setValue(event.target.getAttribute('value'))\n        this.close()\n      }))\n  }\n\n  setCloseEvents() {\n    this.mobileOptions.querySelector('button').addEventListener('click', () => this.close())\n    this.mobileOptions.addEventListener('touchend', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    this.mobileOptions.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    document.body.addEventListener('click', this.close)\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-select-visible')\n\n      if (esc && isOpened) {\n        this.close()\n      }\n    })\n  }\n\n  setValue(value) {\n    const option = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n    const viewValue = option\n      ? option.textContent\n      : null\n\n    if (viewValue) {\n      this.setViewValue(viewValue)\n      this.classList.add('has-value')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n  }\n\n  setViewValue(text) {\n    this.childNodes[0].textContent = text\n  }\n\n  setSelectedOption(target) {\n    // const value = target.value || target.textContent\n    // target.parentNode.setAttribute('value', value)\n    const lastSelected = target.parentNode.querySelector('.mn-select-option[selected]')\n\n    if (lastSelected) {\n      lastSelected.removeAttribute('selected')\n    }\n    target.setAttribute('selected', 'selected')\n  }\n\n  open(event) {\n    if (event && event.target.classList.contains('.mn-select-option')) {\n      return false\n    }\n    this.classList.add('visible')\n    this.mobileOptions.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n  }\n\n  close(event) {\n    const select = document.querySelector('mn-select.visible')\n    if (event && select) {\n      event.stopPropagation()\n      const clickOutside = event.target.tagName === 'BODY'\n        || event.target.classList.contains('mn-mobile-options')\n        || event.target.classList.contains('mn-select-option')\n\n      if (clickOutside && select) {\n        document.body.classList.remove('mn-select-visible')\n        select.classList.remove('visible')\n        select.mobileOptions.classList.remove('visible')\n      }\n    } else if (select) {\n      document.body.classList.remove('mn-select-visible')\n      select.classList.remove('visible')\n      select.mobileOptions.classList.remove('visible')\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}