{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","tabIndex","setMenu","setMobile","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","setNameGetter","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","menu","document","createElement","style","transform","classList","add","Array","from","children","forEach","child","fallbackOption","textContent","attributes","attr","name","value","parentNode","removeChild","appendChild","insertBefore","firstChild","options","querySelector","cloneNode","cancelButton","remove","removeAttribute","mobileOptions","append","body","selected","selectedOption","_this2","querySelectorAll","concat","option","addEventListener","event","target","setSelectedOption","close","_this3","open","key","_this4","contains","esc","keyCode","isOpened","closest","isOption","form","element","Object","defineProperty","get","viewValue","setViewValue","console","error","text","lastSelected","type","focusedOption","focus","select","setValue","undefined","HTMLElement","window","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.tabIndex()\n    this.setMenu()\n    this.setMobile()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    this.setNameGetter()\n    return self\n  }\n\n  tabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-14px, -8px)'\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        const fallbackOption = document.createElement('div')\n        fallbackOption.classList.add('mn-select-option')\n        fallbackOption.textContent = child.textContent\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => fallbackOption.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(fallbackOption)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n  }\n\n  setMobile() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-mobile-options')\n    menu.classList.remove('mn-card')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobileOptions = options\n    options.append(menu)\n    options.append(cancelButton)\n\n    document.body.append(options)\n  }\n\n  setSelected() {\n    const selected = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]') || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      selected.textContent = selectedOption.textContent\n    }\n    this.insertBefore(selected, this.firstChild)\n  }\n\n  setOptionEvents() {\n    const options = this.querySelectorAll('.mn-select-option')\n    const mobileOptions = Array.from(this.mobileOptions.querySelectorAll('.mn-select-option'))\n\n    Array\n      .from(options)\n      .concat(mobileOptions)\n      .forEach(option => option.addEventListener('click', event => {\n        const value = event.target.getAttribute('value') || event.target.textContent\n        this.setSelectedOption(event.target)\n        this.value = value\n        this.close()\n      }))\n  }\n\n  setOpenEvents() {\n    const open = this.open\n    this.addEventListener('click', open)\n    this.addEventListener('keyup', event => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        this.open(event)\n      }\n    })\n  }\n\n  setCloseEvents() {\n    const close = this.close\n    this.mobileOptions.querySelector('button').addEventListener('click', () => this.close())\n    this.mobileOptions.addEventListener('touchend', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    this.mobileOptions.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-select-visible')\n\n      if (esc && isOpened) {\n        this.close()\n      }\n    })\n    document.addEventListener('click', event => {\n      const closest = event.target.closest('mn-select')\n      const isOption = event.target.classList.contains('mn-select-option')\n\n      if (!closest || isOption) {\n        close()\n      }\n    })\n  }\n\n  setNameGetter() {\n    const form = this.closest('form')\n    const name = this.getAttribute('name')\n    const element = this\n\n    if (form && name) {\n      Object.defineProperty(form, name, {get: () => element})\n    }\n  }\n\n  set value(value) {\n    this.setValue(value)\n    this.setAttribute('value', value)\n    const target = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n\n    if (target) {\n      this.setSelectedOption(target)\n    }\n  }\n\n  get value() {\n    return this.getAttribute('value') || undefined\n  }\n\n  setValue(value) {\n    const option = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n    const viewValue = option\n      ? option.textContent\n      : null\n\n    if (viewValue) {\n      this.setViewValue(viewValue)\n      this.classList.add('has-value')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n  }\n\n  setViewValue(text) {\n    this.querySelector('div').textContent = text\n  }\n\n  setSelectedOption(target) {\n    const lastSelected = target.parentNode.querySelector('.mn-select-option[selected]')\n\n    if (lastSelected) {\n      lastSelected.removeAttribute('selected')\n    }\n    target.setAttribute('selected', 'selected')\n  }\n\n  open(event) {\n    this.close()\n    if (event && event.target.classList.contains('.mn-select-option')) {\n      return false\n    }\n    this.classList.add('visible')\n    this.mobileOptions.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n\n    if (event && event.type === 'keyup') {\n      const focusedOption = this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option:first-child')\n      focusedOption.focus()\n    }\n  }\n\n  close() {\n    const select = document.querySelector('mn-select.visible')\n\n    if (select) {\n      document.body.classList.remove('mn-select-visible')\n      select.classList.remove('visible')\n      select.mobileOptions.classList.remove('visible')\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}