{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","filterString","tabIndex","setMenu","setMobile","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","setFormGetter","setValidation","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","menu","document","createElement","style","transform","removeChild","querySelector","classList","add","Array","from","children","forEach","child","option","text","textContent","split","map","char","join","test","innerHTML","attributes","attr","name","value","parentNode","appendChild","insertBefore","firstChild","options","cloneNode","cancelButton","removeAttribute","mobile","body","viewValue","selectedOption","_this2","querySelectorAll","concat","addEventListener","event","target","close","focus","remove","nextFocusable","items","filter","item","contains","index","indexOf","key","length","stopPropagation","preventDefault","focusOption","_this3","open","_this4","hasFilter","slice","undefined","clickOutside","closest","selectOption","form","element","Object","defineProperty","get","input","id","visibility","position","scrollTop","window","MnBackdrop","show","select","hide","type","elementFromPoint","clientX","clientY","_typeof","JSON","stringify","lastSelected","console","error","validate","changeEvent","CustomEvent","dispatchEvent","attrValue","parse","e","filterByRegex","search","RegExp","strReg","replace","reg","matches","match","matchIndex","matchValue","toLowerCase","hiddenOptions","chars","MnInput","customElements","define"],"mappings":"s/CAAMA,SAAAA,SAAAA,iBACJ,QAAAA,UAAYC,MAAM,GAAAC,OAAAC,IAYhB,OAZgBC,iBAAAC,KAAAL,UAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,SAAAA,WAAAA,OAAAA,eAAAA,WAAAA,KAAAA,KAAaA,OACbC,MAAKI,aAAe,GACpBJ,MAAKK,WACLL,MAAKM,UACLN,MAAKO,YACLP,MAAKQ,cACLR,MAAKS,kBACLT,MAAKU,gBACLV,MAAKW,iBACLX,MAAKY,gBACLZ,MAAKa,gBACLZ,KAAOF,KAAPe,2BAAAd,MAAAC,yGAIA,GAAMc,UAAWZ,KAAKa,aAAa,aAAe,GAClDb,MAAKc,aAAa,WAAYF,4CAI9B,GAAMG,MAAOC,SAASC,cAAc,OACpCF,MAAKG,MAAMC,UAAY,yBAEvBnB,KAAKoB,YAAYpB,KAAKqB,cAAc,UAEpCN,KAAKO,UAAUC,IAAI,WAEnBC,MACGC,KAAKzB,KAAK0B,UACVC,QAAQ,SAAAC,OAEP,GAAMC,QAASb,SAASC,cAAc,MACtCY,QAAOP,UAAUC,IAAI,mBAGrB,IAAMO,MAAOF,MACVG,YACAC,MAAM,IACNC,IAAI,SAAAC,MAAA,MAAA,sBAA8BA,KAA9B,YACJC,KAAK,GAEc,UAASC,KAAKR,MAAMG,aAGxCF,OAAOE,YAAcH,MAAMG,YAE3BF,OAAOQ,UAAYP,KAGrBD,OAAOf,aAAa,WAAY,MAEhCU,MACGC,KAAKG,MAAMU,YACXX,QAAQ,SAAAY,MAAA,MAAQV,QAAOf,aAAayB,KAAKC,KAAMD,KAAKE,SAEvDb,MAAMc,WAAWtB,YAAYQ,OAC7Bb,KAAK4B,YAAYd,UAGrB7B,KAAK4C,aAAa7B,KAAMf,KAAK6C,YAC7B7C,KAAKe,KAAOA,yCAIZ,GAAM+B,SAAU9B,SAASC,cAAc,OACjCF,KAAOf,KAAKqB,cAAc,QAAQ0B,WAAU,GAC5CC,aAAehC,SAASC,cAAc,SAE5C6B,SAAQxB,UAAUC,IAAI,oBACtBR,KAAKkC,gBAAgB,SACrBlC,KAAKkC,gBAAgB,SACrBD,aAAajB,YAAc,SAE3B/B,KAAKkD,OAASJ,QACdA,QAAQH,YAAY5B,MACpB+B,QAAQH,YAAYK,cAEpBhC,SAASmC,KAAKR,YAAYG,+CAI1B,GAAMM,WAAYpC,SAASC,cAAc,OACnCoC,eAAiBrD,KAAKa,aAAa,eACrCb,KAAKqB,cAAc,+BACnBrB,KAAKqB,cAAc,gCAChBrB,KAAKqB,cAAc,oBAE1B,IAAIgC,eAAgB,CAClB,GAAMZ,OAAQY,eAAexC,aAAa,UAAYwC,eAAetB,WACrE/B,MAAKyC,MAAQA,MACbzC,KAAKsB,UAAUC,IAAI,aACnB6B,UAAUrB,YAAcsB,eAAetB,gBAClC,IAAI/B,KAAKa,aAAa,SAAU,CACrC,GAAM4B,QAAQzC,KAAKa,aAAa,QAChCb,MAAKyC,MAAQA,MACb,IAAMZ,QAASb,SAASK,cAAT,4BAAmDoB,OAAnD,KAEXZ,UACFuB,UAAUrB,YAAcF,OAAOE,aAInC/B,KAAK4C,aAAaQ,UAAWpD,KAAK6C,sDAGlB,GAAAS,QAAAtD,KACV8C,QAAUtB,MAAMC,KAAKzB,KAAKuD,iBAAiB,sBAC3CL,OAAS1B,MAAMC,KAAKzB,KAAKkD,OAAOK,iBAAiB,qBAEvDT,SACGU,OAAON,QACPvB,QAAQ,SAAAE,QAAA,MAAUA,QAAO4B,iBAAiB,QAAS,SAAAC,OAClD,GAAMjB,OAAQiB,MAAMC,OAAO9C,aAAa,UAAY6C,MAAMC,OAAO5B,WACjEuB,QAAKb,MAAQA,MACba,OAAKM,YAGTd,QACGnB,QAAQ,SAAAE,QAAA,MAAUA,QAAO4B,iBAAiB,YAAa,SAAAC,OACtDA,MAAMC,OAAOE,QACbH,MAAMC,OAAOrC,UAAUwC,OAAO,eAGlChB,QACGnB,QAAQ,SAAAE,QAAA,MAAUA,QAAO4B,iBAAiB,UAAW,SAAAC,OACpD,GAAIK,eAAAA,OAEEC,MAAQxC,MACXC,KAAKiC,MAAMC,OAAOjB,WAAWhB,UAC7BuC,OAAO,SAAAC,MACN,OAAQA,KAAK5C,UAAU6C,SAAS,YAE9BC,MAAQJ,MAAMK,QAAQX,MAAMC,OAQlCI,eAAgBC,MANgB,cAAdN,MAAMY,KAAuBF,MAAQJ,MAAMO,OACzDH,MAAQ,EACM,YAAdV,MAAMY,KAAqBF,MAAQ,EACjCA,MAAQ,EACR,GAIY,cAAdV,MAAMY,KAAqC,YAAdZ,MAAMY,MACrCZ,MAAMC,OAAOrC,UAAUC,IAAI,WAC3BwC,cAAcF,QACdH,MAAMc,kBACNd,MAAMe,sBAIZ3B,QACGnB,QAAQ,SAAAE,QAAA,MAAUA,QAAO4B,iBAAiB,UAAW,SAAAC,OACpD,GAAkB,UAAdA,MAAMY,IAAiB,CACzB,GAAM7B,OAAQiB,MAAMC,OAAO9C,aAAa,UAAY6C,MAAMC,OAAO5B,WACjEuB,QAAKb,MAAQA,MACba,OAAKM,QAELF,MAAMc,uBAIZ1B,QACGnB,QAAQ,SAAAE,QAAA,MAAUA,QAAO4B,iBAAiB,UAAW,SAAAC,OACX,IAArBA,MAAMY,IAAIC,SAG5BjB,OAAKrD,cAAgByD,MAAMY,IAC3BhB,OAAKW,OAASX,OAAKrD,aACnBqD,OAAKoB,YAAYhB,oDAKT,GAAAiB,QAAA3E,IACdA,MAAKyD,iBAAiB,QAAS,SAAAC,OAC7BiB,OAAKC,OACLD,OAAKD,YAAYhB,SAEnB1D,KAAKyD,iBAAiB,UAAW,SAAAC,OAC/B,OAAQA,MAAMY,KACZ,IAAK,QACL,IAAK,IACHK,OAAKC,OACLD,OAAKD,YAAYhB,OACjBA,MAAMe,6DAKG,GAAAI,QAAA7E,IACfA,MAAKyD,iBAAiB,QAAS,WAAA,MAAMoB,QAAKjB,UAC1C5D,KAAKkD,OAAO7B,cAAc,UAAUoC,iBAAiB,QAAS,WAAA,MAAMoB,QAAKjB,UACzE5D,KAAKkD,OAAOO,iBAAiB,QAAS,SAAAC,OAChCA,MAAMC,OAAOrC,UAAU6C,SAAS,qBAClCU,OAAKjB,UAIT5C,SAASyC,iBAAiB,UAAW,SAAAC,OACnC,GAAMoB,WAAYD,OAAK5E,YACN4E,QAAKvD,UAAU6C,SAAS,aAGrB,cAAdT,MAAMY,MACRO,OAAK5E,aAAe4E,OAAK5E,aAAa8E,MAAM,GAAI,GAChDF,OAAKZ,OAASY,OAAK5E,cAGH,QAAdyD,MAAMY,KACRO,OAAKjB,QAGW,WAAdF,MAAMY,MACJQ,UACFD,OAAKZ,OAASe,OAEdH,OAAKjB,YAKb5C,SAASyC,iBAAiB,YAAa,SAAAC,OACrC,GAAMuB,eAAgBvB,MAAMC,OAAOuB,QAAQ,aACrCC,aAAezB,MAAMC,OAAOrC,UAAU6C,SAAS,qBACjDc,cAAgBE,eAClBN,OAAKjB,kDAMT,GAAMwB,MAAOpF,KAAKkF,QAAQ,QACpB1C,KAAOxC,KAAKa,aAAa,QACzBwE,QAAUrF,IAEZoF,OAAQ5C,MACV8C,OAAOC,eAAeH,KAAM5C,MAAOgD,IAAK,WAAA,MAAMH,oDAMhD,GADiBrF,KAAKa,aAAa,YACrB,CACZ,GAAM4E,OAAQzE,SAASC,cAAc,QACrCwE,OAAM3E,aAAa,WAAY,YAC/B2E,MAAM3E,aAAa,OAAQd,KAAKa,aAAa,SAAWb,KAAK0F,IAC7DD,MAAMvE,MAAMyE,WAAa,SACzBF,MAAMvE,MAAM0E,SAAW,WACvB5F,KAAK2C,YAAY8C,uCA4GnBzF,KAAK4D,QACL5D,KAAKe,KAAK8E,UAAY,EACtB7F,KAAKsB,UAAUC,IAAI,WACnBvB,KAAKkD,OAAO5B,UAAUC,IAAI,WAC1BP,SAASmC,KAAK7B,UAAUC,IAAI,qBAC5BuE,OAAOC,WAAWC,uCAIlB,GAAMC,QAASjF,SAASK,cAAc,oBAElC4E,UACFA,OAAO3E,UAAUwC,OAAO,WACxBmC,OAAOhC,OAASe,OAChBiB,OAAO/C,OAAO5B,UAAUwC,OAAO,WAC/B9C,SAASmC,KAAK7B,UAAUwC,OAAO,qBAC/BgC,OAAOC,WAAWG,4CAIVxC,OACV,GAAmB,UAAfA,MAAMyC,KAAkB,CAEXnF,SAASoF,iBAAiB1C,MAAM2C,QAAS3C,MAAM4C,SACvDzC,YACF,IAAmB,YAAfH,MAAMyC,KAAoB,CACnC,GAAMtE,SAAS7B,KAAKqB,cAAc,gCAC7BrB,KAAKqB,cAAc,iCACxBQ,SAAOgC,qCApIDpB,OACRA,MAAyB,YAAjB,SAAOA,MAAP,YAAA8D,QAAO9D,QACX+D,KAAKC,UAAUhE,OACfA,KAEJ,IAAMZ,QAAS7B,KAAKqB,cAAL,4BAA+CoB,MAA/C,MACTgD,MAAQzF,KAAKqB,cAAc,QAEjC,IAAIQ,OAAQ,CACV,GAAMuB,WAAYpD,KAAKqB,cAAc,6BACrC+B,aACIA,UAAUrB,YAAcF,OAAOE,aAE/B0D,QACFA,MAAMhD,MAAQA,OAEhBzC,KAAKsB,UAAUC,IAAI,YACnB,IAAMmF,cAAe7E,OAAOa,WAAWrB,cAAc,8BAEjDqF,eACFA,aAAazD,gBAAgB,YAE/BpB,OAAOf,aAAa,WAAY,gBAEhC6F,SAAQC,MAAR,kEAC+BnE,MAD/B,kFAKFzC,MAAK6G,UACL,IAAMC,aAAc,GAAIC,aAAY,UAAWtE,MAAAA,OAC/CzC,MAAKgH,cAAcF,aACnB9G,KAAKc,aAAa,QAAS2B,uBAK3B,GAAIwE,WAAAA,MAEJ,KACEA,UAAYjH,KAAKa,aAAa,SAC1B2F,KAAKU,MAAMlH,KAAKa,aAAa,UAC7Bb,KAAKa,aAAa,SACtB,MAAOsG,GACPF,UAAYjH,KAAKa,aAAa,SAGhC,MAAOoG,YAAajC,oCAGXvC,OA2CT,QAAS2E,eAAcC,OAAQ5E,OAE7B,MADY,IAAI6E,QAAOD,OAAOrF,MAAM,IAAIG,KAAK,MAAO,KACzCC,KAAKK,OA5ClB,GAAIA,MAAO,CACTzC,KAAKsB,UAAUC,IAAI,YACnBvB,KAAKC,aAAewC,KACJjB,OAAMC,KAAKzB,KAAKe,KAAKwC,iBAAiB,sBAC9C5B,QAAQ,SAAAE,QAGd,GAFoBuF,cAAc3E,MAAOZ,OAAOE,aAE/B,CACfF,OAAOP,UAAUwC,OAAO,SACxB,IAAMyD,QAAS9E,MACVT,MAAM,IACNG,KAAK,MACLqF,QAAQ,iBAAkB,QACzBC,IAAM,GAAIH,QAAOC,OAAQ,KACzBG,QAAU7F,OAAOE,YAAY4F,MAAMF,IAC3BjG,OAAMC,KAAKI,OAAO0B,iBAAiB,SAG9C5B,QAAQ,SAACO,KAAMkC,OACd,GAAMwD,YAAaxD,OAASsD,QAAQtD,MAC9ByD,WAAapF,MAAMqF,cAAcT,OAAOnF,KAAKH,YAAY+F,gBAAkB,CAE7EF,aAAcC,WAChB3F,KAAKZ,UAAUC,IAAI,gBAEnBW,KAAKZ,UAAUwC,OAAO,kBAG5BrB,MAAMT,MAAM,QAEZH,QAAOP,UAAUC,IAAI,gBAGpB,CACLvB,KAAKsB,UAAUwC,OAAO,YACtB9D,KAAKC,aAAe,EACpB,IAAM8H,eAAgBvG,MAAMC,KAAKzB,KAAKuD,iBAAiB,6BACjDyE,MAAQxG,MAAMC,KAAKzB,KAAKuD,iBAAiB,uCAC/CwE,eAAcpG,QAAQ,SAAAE,QAAA,MAAUA,QAAOP,UAAUwC,OAAO,YACxDkE,MAAMrG,QAAQ,SAAAO,MAAA,MAAQA,MAAKZ,UAAUwC,OAAO,mCAU9C,MAAO9D,MAAKC,cAAgB+E,qBAlWTc,OAAOmC,QA0Z9BnC,QAAOoC,eAAeC,OAAO,YAAaxI","file":"mn-select.js","sourcesContent":["class MnSelect extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    this.filterString = ''\n    this.tabIndex()\n    this.setMenu()\n    this.setMobile()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    this.setFormGetter()\n    this.setValidation()\n    return self\n  }\n\n  tabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-19px, -5px)'\n    // inherit from .mn-input\n    this.removeChild(this.querySelector('input'))\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        // fallback option, some browsers dont support tag option\n        const option = document.createElement('div')\n        option.classList.add('mn-select-option')\n\n        // wrap in a span\n        const text = child\n          .textContent\n          .split('')\n          .map(char => `<span class=\"char\">${char}</span>`)\n          .join('')\n\n        const isDataBinding = /{{.+}}/.test(child.textContent)\n\n        if (isDataBinding) {\n          option.textContent = child.textContent\n        } else {\n          option.innerHTML = text\n        }\n\n        option.setAttribute('tabindex', '-1')\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => option.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(option)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n    this.menu = menu\n  }\n\n  setMobile() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-select-mobile')\n    menu.removeAttribute('class')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobile = options\n    options.appendChild(menu)\n    options.appendChild(cancelButton)\n\n    document.body.appendChild(options)\n  }\n\n  setSelected() {\n    const viewValue = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      viewValue.textContent = selectedOption.textContent\n    } else if (this.getAttribute('value')) {\n      const value = this.getAttribute('value')\n      this.value = value\n      const option = document.querySelector(`.mn-select-option[value='${value}']`)\n\n      if (option) {\n        viewValue.textContent = option.textContent\n      }\n    }\n\n    this.insertBefore(viewValue, this.firstChild)\n  }\n\n  setOptionEvents() {\n    const options = Array.from(this.querySelectorAll('.mn-select-option'))\n    const mobile = Array.from(this.mobile.querySelectorAll('.mn-select-option'))\n\n    options\n      .concat(mobile)\n      .forEach(option => option.addEventListener('click', event => {\n        const value = event.target.getAttribute('value') || event.target.textContent\n        this.value = value\n        this.close()\n      }))\n\n    options\n      .forEach(option => option.addEventListener('mousemove', event => {\n        event.target.focus()\n        event.target.classList.remove('keydown')\n      }))\n\n    options\n      .forEach(option => option.addEventListener('keydown', event => {\n        let nextFocusable\n\n        const items = Array\n          .from(event.target.parentNode.children)\n          .filter(item => {\n            return !item.classList.contains('hidden')\n          })\n        const index = items.indexOf(event.target)\n\n        const nextIndex = event.key === 'ArrowDown' && index < items.length\n          ? index + 1\n          : event.key === 'ArrowUp' && index > 0\n            ? index - 1\n            : 0\n\n        nextFocusable = items[nextIndex]\n\n        if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n          event.target.classList.add('keydown')\n          nextFocusable.focus()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }))\n\n    options\n      .forEach(option => option.addEventListener('keydown', event => {\n        if (event.key === 'Enter') {\n          const value = event.target.getAttribute('value') || event.target.textContent\n          this.value = value\n          this.close()\n          // this.focus()\n          event.stopPropagation()\n        }\n      }))\n\n    options\n      .forEach(option => option.addEventListener('keydown', event => {\n        const isCharacter = event.key.length === 1\n\n        if (isCharacter) {\n          this.filterString += event.key\n          this.filter = this.filterString\n          this.focusOption(event)\n        }\n      }))\n  }\n\n  setOpenEvents() {\n    this.addEventListener('click', event => {\n      this.open()\n      this.focusOption(event)\n    })\n    this.addEventListener('keydown', event => {\n      switch (event.key) {\n        case 'Enter':\n        case ' ':\n          this.open()\n          this.focusOption(event)\n          event.preventDefault()\n      }\n    })\n  }\n\n  setCloseEvents() {\n    this.addEventListener('focus', () => this.close())\n    this.mobile.querySelector('button').addEventListener('click', () => this.close())\n    this.mobile.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-select-mobile')) {\n        this.close()\n      }\n    })\n\n    document.addEventListener('keydown', event => {\n      const hasFilter = this.filterString\n      const isOpened = this.classList.contains('visible')\n\n      if (isOpened) {\n        if (event.key === 'Backspace') {\n          this.filterString = this.filterString.slice(0, -1)\n          this.filter = this.filterString\n        }\n\n        if (event.key === 'Tab') {\n          this.close()\n        }\n\n        if (event.key === 'Escape') {\n          if (hasFilter) {\n            this.filter = undefined\n          } else {\n            this.close()\n          }\n        }\n      }\n    })\n    document.addEventListener('mousedown', event => {\n      const clickOutside = !event.target.closest('mn-select')\n      const selectOption = event.target.classList.contains('mn-select-option')\n      if (clickOutside || selectOption) {\n        this.close()\n      }\n    })\n  }\n\n  setFormGetter() {\n    const form = this.closest('form')\n    const name = this.getAttribute('name')\n    const element = this\n\n    if (form && name) {\n      Object.defineProperty(form, name, {get: () => element})\n    }\n  }\n\n  setValidation() {\n    const required = this.getAttribute('required')\n    if (required) {\n      const input = document.createElement('input')\n      input.setAttribute('required', 'required')\n      input.setAttribute('name', this.getAttribute('name') || this.id)\n      input.style.visibility = 'hidden'\n      input.style.position = 'absolute'\n      this.appendChild(input)\n    }\n  }\n\n  set value(value) {\n    value = typeof value === 'object'\n      ? JSON.stringify(value)\n      : value\n\n    const option = this.querySelector(`.mn-select-option[value='${value}']`)\n    const input = this.querySelector('input')\n\n    if (option) {\n      const viewValue = this.querySelector('div:not(.mn-select-option)')\n      viewValue\n        ? viewValue.textContent = option.textContent\n        : null\n      if (input) {\n        input.value = value\n      }\n      this.classList.add('has-value')\n      const lastSelected = option.parentNode.querySelector('.mn-select-option[selected]')\n\n      if (lastSelected) {\n        lastSelected.removeAttribute('selected')\n      }\n      option.setAttribute('selected', 'selected')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n\n    this.validate()\n    const changeEvent = new CustomEvent('change', {value})\n    this.dispatchEvent(changeEvent)\n    this.setAttribute('value', value)\n  }\n\n  get value() {\n    // return evaluate(this.getAttribute('value')) || undefined\n    let attrValue\n\n    try {\n      attrValue = this.getAttribute('value')\n        ? JSON.parse(this.getAttribute('value'))\n        : this.getAttribute('value')\n    } catch (e) {\n      attrValue = this.getAttribute('value')\n    }\n\n    return attrValue || undefined\n  }\n\n  set filter(value) {\n    if (value) {\n      this.classList.add('filtered')\n      this.filterString = value\n      const options = Array.from(this.menu.querySelectorAll('.mn-select-option'))\n      options.forEach(option => {\n        const matchOption = filterByRegex(value, option.textContent)\n\n        if (matchOption) {\n          option.classList.remove('hidden')\n          const strReg = value\n              .split('')\n              .join('.*')\n              .replace(/(\\w(?:\\.\\*)?)/g, '($1)')\n          const reg = new RegExp(strReg, 'i')\n          const matches = option.textContent.match(reg)\n          const chars = Array.from(option.querySelectorAll('span'))\n\n          chars\n            .forEach((char, index) => {\n              const matchIndex = index >= matches.index\n              const matchValue = value.toLowerCase().search(char.textContent.toLowerCase()) >= 0\n\n              if (matchIndex && matchValue) {\n                char.classList.add('filter-match')\n              } else {\n                char.classList.remove('filter-match')\n              }\n            })\n          value.split('')\n        } else {\n          option.classList.add('hidden')\n        }\n      })\n    } else {\n      this.classList.remove('filtered')\n      this.filterString = ''\n      const hiddenOptions = Array.from(this.querySelectorAll('.mn-select-option.hidden'))\n      const chars = Array.from(this.querySelectorAll('.mn-select-option span.filter-match'))\n      hiddenOptions.forEach(option => option.classList.remove('hidden'))\n      chars.forEach(char => char.classList.remove('filter-match'))\n    }\n\n    function filterByRegex(search, value) {\n      const reg = new RegExp(search.split('').join('.*'), 'i')\n      return reg.test(value)\n    }\n  }\n\n  get filter() {\n    return this.filterString || undefined\n  }\n\n  open() {\n    this.close()\n    this.menu.scrollTop = 0\n    this.classList.add('visible')\n    this.mobile.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n    window.MnBackdrop.show()\n  }\n\n  close() {\n    const select = document.querySelector('mn-select.visible')\n\n    if (select) {\n      select.classList.remove('visible')\n      select.filter = undefined\n      select.mobile.classList.remove('visible')\n      document.body.classList.remove('mn-select-visible')\n      window.MnBackdrop.hide()\n    }\n  }\n\n  focusOption(event) {\n    if (event.type === 'click') {\n      // focus on option behind mouse\n      const option = document.elementFromPoint(event.clientX, event.clientY)\n      option.focus()\n    } else if (event.type === 'keydown') {\n      const option = this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option:not(.hidden)')\n      option.focus()\n    }\n  }\n}\n\n// function evaluate(value) {\n//   try {\n//     const isVariable = !value.startsWith('[')\n//       && !value.startsWith('{')\n//       && !value.startsWith('\\'')\n//       && !value.startsWith('\"')\n//       && !value.startsWith('`')\n//       && value !== 'true'\n//       && value !== 'false'\n//       && isNaN(value)\n\n//     return isVariable\n//         ? eval(`'${value}'`) // convert to string\n//         : eval(`(${value})`) // evaluate\n//   } catch (e) {\n//     return value\n//   }\n// }\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}