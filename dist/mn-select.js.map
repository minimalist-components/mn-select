{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this2","_ret","_classCallCheck","this","filterString","tabIndex","setMenu","setMobile","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","setFormGetter","setValidation","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","menu","document","createElement","style","transform","removeChild","querySelector","classList","add","Array","from","children","forEach","child","option","text","textContent","split","map","char","join","test","innerHTML","attributes","attr","name","value","parentNode","appendChild","insertBefore","firstChild","options","cloneNode","cancelButton","removeAttribute","mobile","body","viewValue","selectedOption","clickToSelect","event","target","close","focusOption","focusIn","arrowNavigate","isArrowKey","key","elementIsVisible","_this","contains","items","filter","item","index","indexOf","nextIndex","length","nextFocusable","stopPropagation","preventDefault","enterToSelect","isEnterKey","charactereFilter","isCharacter","querySelectorAll","concat","addEventListener","_this3","open","_this4","hasFilter","slice","undefined","clickOutside","closest","selectOption","form","element","Object","defineProperty","get","input","id","visibility","position","scrollTop","window","MnBackdrop","show","select","remove","hide","lastFocus","_typeof","JSON","stringify","lastSelected","console","error","validate","changeEvent","CustomEvent","dispatchEvent","attrValue","parse","e","filterByRegex","search","RegExp","strReg","replace","reg","matches","match","matchIndex","matchValue","toLowerCase","hiddenOptions","chars","MnInput","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    this.filterString = ''\n    this.tabIndex()\n    this.setMenu()\n    this.setMobile()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    this.setFormGetter()\n    this.setValidation()\n    return self\n  }\n\n  tabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-19px, -5px)'\n    // inherit from .mn-input\n    this.removeChild(this.querySelector('input'))\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        // fallback option, some browsers dont support tag option\n        const option = document.createElement('div')\n        option.classList.add('mn-select-option')\n\n        // wrap in a span\n        const text = child\n          .textContent\n          .split('')\n          .map(char => `<span class=\"char\">${char}</span>`)\n          .join('')\n\n        const isDataBinding = /{{.+}}/.test(child.textContent)\n\n        if (isDataBinding) {\n          option.textContent = child.textContent\n        } else {\n          option.innerHTML = text\n        }\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => option.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(option)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n    this.menu = menu\n  }\n\n  setMobile() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-select-mobile')\n    menu.removeAttribute('class')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobile = options\n    options.appendChild(menu)\n    options.appendChild(cancelButton)\n\n    document.body.appendChild(options)\n  }\n\n  setSelected() {\n    const viewValue = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      viewValue.textContent = selectedOption.textContent\n    } else if (this.getAttribute('value')) {\n      const value = this.getAttribute('value')\n      this.value = value\n      const option = document.querySelector(`.mn-select-option[value='${value}']`)\n\n      if (option) {\n        viewValue.textContent = option.textContent\n      }\n    }\n\n    this.insertBefore(viewValue, this.firstChild)\n  }\n\n  setOptionEvents() {\n    const options = Array.from(this.querySelectorAll('.mn-select-option'))\n    const mobile = Array.from(this.mobile.querySelectorAll('.mn-select-option'))\n    const _this = this\n\n    options\n      .concat(mobile)\n      .forEach(option => option.addEventListener('click', clickToSelect))\n\n    options\n      .forEach(option => option.addEventListener('mousemove', focusOption))\n\n    document.addEventListener('keydown', arrowNavigate)\n    document.addEventListener('keydown', enterToSelect)\n    document.addEventListener('keydown', charactereFilter)\n\n    function clickToSelect(event) {\n      const value = event.target.getAttribute('value') || event.target.textContent\n      this.value = value\n      this.close()\n    }\n\n    function focusOption(event) {\n      this.focusIn(event.target)\n    }\n\n    function arrowNavigate(event) {\n      const isArrowKey = event.key === 'ArrowDown' || event.key === 'ArrowUp'\n      const elementIsVisible = _this.classList.contains('visible')\n\n      if (isArrowKey && elementIsVisible) {\n        const items = Array\n          .from(_this.menu.children)\n          .filter(item => {\n            return !item.classList.contains('hidden')\n          })\n\n        const index = items.indexOf(_this.querySelector('.mn-select-option.focus'))\n\n        const nextIndex = event.key === 'ArrowDown' && index < items.length\n          ? index + 1\n          : event.key === 'ArrowUp' && index > 0\n            ? index - 1\n            : 0\n\n        const nextFocusable = items[nextIndex]\n\n        if (isArrowKey && nextFocusable) {\n          // event.target.classList.add('keydown')\n\n          _this.focusIn(nextFocusable)\n          // nextFocusable && nextFocusable.focus()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }\n    }\n\n    function enterToSelect(event) {\n      const isEnterKey = event.key === 'Enter'\n      const elementIsVisible = _this.classList.contains('visible')\n      const option = _this.menu.querySelector('.focus')\n\n      if (isEnterKey && elementIsVisible && option) {\n        const value = option.getAttribute('value') || option.textContent\n        _this.value = value\n        _this.close()\n      }\n    }\n\n    function charactereFilter(event) {\n      const isCharacter = event.key.length === 1\n      const elementIsVisible = _this.classList.contains('visible')\n\n      if (isCharacter && elementIsVisible) {\n        _this.filterString += event.key\n        _this.filter = _this.filterString\n        _this.focusOption(event)\n      }\n    }\n  }\n\n  setOpenEvents() {\n    this.addEventListener('click', event => {\n      this.open()\n      this.focusOption(event)\n    })\n\n    this.addEventListener('keydown', event => {\n      switch (event.key) {\n        case 'Enter':\n        case ' ':\n          this.open()\n          this.focusOption(event)\n          event.preventDefault()\n      }\n    })\n  }\n\n  setCloseEvents() {\n    this.addEventListener('focus', () => this.close())\n    this.mobile.querySelector('button').addEventListener('click', () => this.close())\n    this.mobile.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-select-mobile')) {\n        this.close()\n      }\n    })\n\n    document.addEventListener('keydown', event => {\n      const hasFilter = this.filterString\n      const isOpened = this.classList.contains('visible')\n\n      if (isOpened) {\n        if (event.key === 'Backspace') {\n          this.filterString = this.filterString.slice(0, -1)\n          this.filter = this.filterString\n        }\n\n        if (event.key === 'Tab') {\n          this.close()\n        }\n\n        if (event.key === 'Escape') {\n          if (hasFilter) {\n            this.filter = undefined\n            this.focusOption()\n          } else {\n            this.close()\n          }\n        }\n      }\n    })\n    document.addEventListener('mousedown', event => {\n      const clickOutside = !event.target.closest('mn-select')\n      const selectOption = event.target.classList.contains('mn-select-option')\n      if (clickOutside || selectOption) {\n        this.close()\n      }\n    })\n  }\n\n  setFormGetter() {\n    const form = this.closest('form')\n    const name = this.getAttribute('name')\n    const element = this\n\n    if (form && name) {\n      Object.defineProperty(form, name, {get: () => element})\n    }\n  }\n\n  setValidation() {\n    const required = this.getAttribute('required')\n    if (required) {\n      const input = document.createElement('input')\n      input.setAttribute('required', 'required')\n      input.setAttribute('name', this.getAttribute('name') || this.id)\n      input.style.visibility = 'hidden'\n      input.style.position = 'absolute'\n      this.appendChild(input)\n    }\n  }\n\n  set value(value) {\n    value = typeof value === 'object'\n      ? JSON.stringify(value)\n      : value\n\n    const option = this.querySelector(`.mn-select-option[value='${value}']`)\n    const input = this.querySelector('input')\n\n    if (option) {\n      const viewValue = this.querySelector('div:not(.mn-select-option)')\n      viewValue\n        ? viewValue.textContent = option.textContent\n        : null\n      if (input) {\n        input.value = value\n      }\n      this.classList.add('has-value')\n      const lastSelected = option.parentNode.querySelector('.mn-select-option[selected]')\n\n      if (lastSelected) {\n        lastSelected.removeAttribute('selected')\n      }\n      option.setAttribute('selected', 'selected')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n\n    this.validate()\n    const changeEvent = new CustomEvent('change', {value})\n    this.dispatchEvent(changeEvent)\n    this.setAttribute('value', value)\n  }\n\n  get value() {\n    // return evaluate(this.getAttribute('value')) || undefined\n    let attrValue\n\n    try {\n      attrValue = this.getAttribute('value')\n        ? JSON.parse(this.getAttribute('value'))\n        : this.getAttribute('value')\n    } catch (e) {\n      attrValue = this.getAttribute('value')\n    }\n\n    return attrValue || undefined\n  }\n\n  set filter(value) {\n    if (value) {\n      this.classList.add('filtered')\n      this.filterString = value\n      const options = Array.from(this.menu.querySelectorAll('.mn-select-option'))\n      options.forEach(option => {\n        const matchOption = filterByRegex(value, option.textContent)\n\n        if (matchOption) {\n          option.classList.remove('hidden')\n          const strReg = value\n              .split('')\n              .join('.*')\n              .replace(/(\\w(?:\\.\\*)?)/g, '($1)')\n          const reg = new RegExp(strReg, 'i')\n          const matches = option.textContent.match(reg)\n          const chars = Array.from(option.querySelectorAll('span'))\n\n          chars\n            .forEach((char, index) => {\n              const matchIndex = index >= matches.index\n              const matchValue = value.toLowerCase().search(char.textContent.toLowerCase()) >= 0\n\n              if (matchIndex && matchValue) {\n                char.classList.add('filter-match')\n              } else {\n                char.classList.remove('filter-match')\n              }\n            })\n          value.split('')\n        } else {\n          option.classList.add('hidden')\n        }\n      })\n    } else {\n      this.classList.remove('filtered')\n      this.filterString = ''\n      const hiddenOptions = Array.from(this.querySelectorAll('.mn-select-option.hidden'))\n      const chars = Array.from(this.querySelectorAll('.mn-select-option span.filter-match'))\n      hiddenOptions.forEach(option => option.classList.remove('hidden'))\n      chars.forEach(char => char.classList.remove('filter-match'))\n    }\n\n    function filterByRegex(search, value) {\n      const reg = new RegExp(search.split('').join('.*'), 'i')\n      return reg.test(value)\n    }\n  }\n\n  get filter() {\n    return this.filterString || undefined\n  }\n\n  open() {\n    this.close()\n    this.menu.scrollTop = 0\n    this.classList.add('visible')\n    this.mobile.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n    window.MnBackdrop.show()\n    this.focusOption()\n  }\n\n  close() {\n    const select = document.querySelector('mn-select.visible')\n\n    if (select) {\n      select.classList.remove('visible')\n      select.filter = undefined\n      select.mobile.classList.remove('visible')\n      document.body.classList.remove('mn-select-visible')\n      window.MnBackdrop.hide()\n    }\n  }\n\n  focusOption() {\n  // focusOption(event = {}) {\n    // let option\n    // if (event.type === 'click') {\n    //   // focus on option behind mouse\n    //   option = document.elementFromPoint(event.clientX, event.clientY)\n    // // } else if (event.type === 'keydown') {\n    // } else {\n    //   option = this.querySelector('.mn-select-option[selected]')\n    //     || this.querySelector('.mn-select-option:not(.hidden)')\n    // }\n\n    // return false\n    // this.focusIn(option)\n    // // option && option.focus()\n  }\n\n  focusIn(option) {\n    if (!option.classList.contains('focus')) {\n      const lastFocus = this.querySelector('.mn-select-option.focus')\n      lastFocus && lastFocus.classList.remove('focus')\n      option && option.classList.add('focus')\n      // console.log('focus => ', option)\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}