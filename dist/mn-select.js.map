{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","setMenu","setMobileOptions","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","_possibleConstructorReturn","selected","document","createElement","selectedOption","querySelector","textContent","insertBefore","firstChild","menu","style","transform","classList","add","Array","from","children","forEach","child","fallbackOption","attributes","attr","setAttribute","name","value","parentNode","removeChild","appendChild","options","cloneNode","cancelButton","remove","removeAttribute","mobileOptions","append","body","open","addEventListener","_this2","querySelectorAll","concat","option","event","setSelectedOption","target","setValue","getAttribute","close","_this3","contains","esc","keyCode","isOpened","viewValue","setViewValue","console","error","text","childNodes","lastSelected","select","stopPropagation","clickOutside","tagName","HTMLElement","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setMenu()\n    this.setMobileOptions()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    return self\n  }\n\n  setSelected() {\n    const selected = document.createElement('div')\n    const selectedOption = this.querySelector('.mn-select-option[selected]') || this.querySelector('.mn-select-option')\n    selected.textContent = selectedOption.textContent\n    this.insertBefore(selected, this.firstChild)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-14px, -8px)'\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        const fallbackOption = document.createElement('div')\n        fallbackOption.classList.add('mn-select-option')\n        fallbackOption.textContent = child.textContent\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => fallbackOption.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(fallbackOption)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n  }\n\n  setMobileOptions() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-mobile-options')\n    menu.classList.remove('mn-card')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobileOptions = options\n    options.append(menu)\n    options.append(cancelButton)\n\n    document.body.append(options)\n  }\n\n  setOpenEvents() {\n    const open = this.open\n    this.addEventListener('click', open)\n  }\n\n  setOptionEvents() {\n    const options = this.querySelectorAll('.mn-select-option')\n    const mobileOptions = Array.from(this.mobileOptions.querySelectorAll('.mn-select-option'))\n\n    Array\n      .from(options)\n      .concat(mobileOptions)\n      .forEach(option => option.addEventListener('click', event => {\n        this.setSelectedOption(event.target)\n        this.setValue(event.target.getAttribute('value'))\n        this.close()\n      }))\n  }\n\n  setCloseEvents() {\n    this.mobileOptions.querySelector('button').addEventListener('click', () => this.close())\n    this.mobileOptions.addEventListener('touchend', event => {\n      if (event.target.classList.contains('mn-mobile-options')) {\n        this.close()\n      }\n    })\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-select-visible')\n\n      if (esc && isOpened) {\n        this.close()\n      }\n    })\n  }\n\n  setValue(value) {\n    const option = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n    const viewValue = option\n      ? option.textContent\n      : null\n\n    if (viewValue) {\n      this.setViewValue(viewValue)\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n  }\n\n  setViewValue(text) {\n    this.childNodes[0].textContent = text\n  }\n\n  setSelectedOption(target) {\n    // const value = target.value || target.textContent\n    // target.parentNode.setAttribute('value', value)\n    const lastSelected = target.parentNode.querySelector('.mn-select-option[selected]')\n\n    if (lastSelected) {\n      lastSelected.removeAttribute('selected')\n    }\n    target.setAttribute('selected', 'selected')\n  }\n\n  open(event) {\n    if (event && event.target.classList.contains('.mn-select-option')) {\n      return false\n    }\n    this.classList.add('visible')\n    this.mobileOptions.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n  }\n\n  close(event) {\n    const select = document.querySelector('mn-select.visible')\n    if (event && select) {\n      event.stopPropagation()\n      const clickOutside = event.target.tagName === 'BODY'\n        || event.target.classList.contains('mn-mobile-options')\n        || event.target.classList.contains('mn-select-option')\n\n      if (clickOutside && select) {\n        document.body.classList.remove('mn-select-visible')\n        select.classList.remove('visible')\n        select.mobileOptions.classList.remove('visible')\n      }\n    } else if (select) {\n      document.body.classList.remove('mn-select-visible')\n      select.classList.remove('visible')\n      select.mobileOptions.classList.remove('visible')\n    }\n  }\n}\n\ncustomElements.define('mn-select', MnSelect)\n\n"]}