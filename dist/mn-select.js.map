{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this","_ret","_classCallCheck","this","tabIndex","setMenu","setMobile","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","setFormGetter","setValidation","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","menu","document","createElement","style","transform","classList","add","Array","from","children","forEach","child","option","textContent","attributes","attr","name","value","parentNode","removeChild","appendChild","insertBefore","firstChild","options","querySelector","cloneNode","cancelButton","removeAttribute","mobile","append","body","viewValue","selectedOption","_this2","querySelectorAll","concat","addEventListener","event","target","close","focus","remove","nextFocusable","key","nextElementSibling","previousElementSibling","stopPropagation","preventDefault","_this3","open","focusOption","_this4","contains","esc","keyCode","isOpened","clickOutside","closest","selectOption","form","element","Object","defineProperty","get","required","input","id","visibility","position","window","MnBackdrop","show","select","hide","type","elementFromPoint","clientX","clientY","lastSelected","console","error","undefined","HTMLElement","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.tabIndex()\n    this.setMenu()\n    this.setMobile()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    this.setFormGetter()\n    this.setValidation()\n    return self\n  }\n\n  tabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-17px, -5px)'\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        // fallback option, some browsers dont support tag option\n        const option = document.createElement('div')\n        option.classList.add('mn-select-option')\n        option.textContent = child.textContent\n        option.setAttribute('tabindex', '-1')\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => option.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(option)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n  }\n\n  setMobile() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-select-mobile')\n    menu.removeAttribute('class')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobile = options\n    options.append(menu)\n    options.append(cancelButton)\n\n    document.body.append(options)\n  }\n\n  setSelected() {\n    const viewValue = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      viewValue.textContent = selectedOption.textContent\n    }\n    this.insertBefore(viewValue, this.firstChild)\n  }\n\n  setOptionEvents() {\n    const options = this.querySelectorAll('.mn-select-option')\n    const mobile = Array.from(this.mobile.querySelectorAll('.mn-select-option'))\n\n    Array\n      .from(options)\n      .concat(mobile)\n      .forEach(option => option.addEventListener('click', event => {\n        const value = event.target.getAttribute('value') || event.target.textContent\n        this.value = value\n        this.close()\n      }))\n\n    options\n      .forEach(option => option.addEventListener('mousemove', event => {\n        event.target.focus()\n        event.target.classList.remove('keydown')\n      }))\n\n    options\n      .forEach(option => option.addEventListener('keydown', event => {\n        let nextFocusable\n        switch (event.key) {\n          case 'ArrowDown':\n            nextFocusable = event.target.nextElementSibling\n            break\n          case 'ArrowUp':\n            nextFocusable = event.target.previousElementSibling\n            break\n        }\n\n        if (nextFocusable) {\n          event.target.classList.add('keydown')\n          nextFocusable.focus()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }))\n\n    options\n      .forEach(option => option.addEventListener('keydown', event => {\n        if (event.key === 'Enter') {\n          const value = event.target.getAttribute('value') || event.target.textContent\n          this.value = value\n          this.close()\n          this.focus()\n          event.stopPropagation()\n        }\n      }))\n  }\n\n  setOpenEvents() {\n    this.addEventListener('click', () => {\n      this.open()\n      this.focusOption(event)\n    })\n    this.addEventListener('keydown', event => {\n      switch (event.key) {\n        case 'Enter':\n        case ' ':\n          this.open()\n          this.focusOption(event)\n          event.preventDefault()\n      }\n    })\n  }\n\n  setCloseEvents() {\n    this.addEventListener('focus', () => this.close())\n    this.mobile.querySelector('button').addEventListener('click', () => this.close())\n    this.mobile.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-select-mobile')) {\n        this.close()\n      }\n    })\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-select-visible')\n\n      if (esc && isOpened) {\n        this.close()\n      }\n    })\n    document.addEventListener('click', event => {\n      const clickOutside = !event.target.closest('mn-select')\n      const selectOption = event.target.classList.contains('mn-select-option')\n\n      if (clickOutside || selectOption) {\n        this.close()\n      }\n    })\n  }\n\n  setFormGetter() {\n    const form = this.closest('form')\n    const name = this.getAttribute('name')\n    const element = this\n\n    if (form && name) {\n      Object.defineProperty(form, name, {get: () => element})\n    }\n  }\n\n  setValidation() {\n    const required = this.getAttribute('required')\n    if (required) {\n      const input = document.createElement('input')\n      input.setAttribute('required', 'required')\n      input.setAttribute('name', this.getAttribute('name') || this.id)\n      input.style.visibility = 'hidden'\n      input.style.position = 'absolute'\n      this.append(input)\n    }\n  }\n\n  set value(value) {\n    const option = this.querySelector(`.mn-select-option[value=\"${value}\"]`)\n    const input = this.querySelector('input')\n\n    if (option) {\n      this.querySelector('div').textContent = option.textContent\n      if (input) {\n        input.value = value\n      }\n      this.classList.add('has-value')\n      const lastSelected = option.parentNode.querySelector('.mn-select-option[selected]')\n\n      if (lastSelected) {\n        lastSelected.removeAttribute('selected')\n      }\n      option.setAttribute('selected', 'selected')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n\n    this.setAttribute('value', value)\n  }\n\n  get value() {\n    return this.getAttribute('value') || undefined\n  }\n\n  open() {\n    this.close()\n    this.classList.add('visible')\n    this.mobile.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n    window.MnBackdrop.show()\n  }\n\n  close() {\n    const select = document.querySelector('mn-select.visible')\n\n    if (select) {\n      select.classList.remove('visible')\n      select.mobile.classList.remove('visible')\n      document.body.classList.remove('mn-select-visible')\n      window.MnBackdrop.hide()\n    }\n  }\n\n  focusOption(event) {\n    if (event.type === 'click') {\n      // focus on option behind mouse\n      const option = document.elementFromPoint(event.clientX, event.clientY)\n      option.focus()\n    } else if (event.type === 'keydown') {\n      const option = this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option:first-child')\n      option.focus()\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}