{"version":3,"sources":["scripts/mn-select.class.js"],"names":["MnSelect","self","_this2","_ret","_classCallCheck","this","filterString","tabIndex","setMenu","setMobile","setSelected","setOptionEvents","setOpenEvents","setCloseEvents","setFormGetter","setValidation","_possibleConstructorReturn","tabindex","getAttribute","setAttribute","menu","document","createElement","style","transform","removeChild","querySelector","classList","add","Array","from","children","forEach","child","option","text","textContent","split","map","char","join","test","innerHTML","attributes","attr","name","value","parentNode","appendChild","insertBefore","firstChild","options","cloneNode","cancelButton","removeAttribute","mobile","body","viewValue","selectedOption","clickToSelect","event","target","_this","close","focusOption","contains","remove","focusIn","arrowNavigate","isArrowKey","key","elementIsVisible","items","filter","item","index","indexOf","nextIndex","length","nextFocusable","stopPropagation","preventDefault","enterToSelect","isEnterKey","characterFilter","isCharacter","querySelectorAll","concat","addEventListener","clickToOpen","open","enterOrSpaceToOpen","isEnterOrSpaceKey","_this3","hasFilter","slice","undefined","clickOutside","closest","selectOption","form","element","Object","defineProperty","get","input","id","visibility","position","scrollTop","window","MnBackdrop","show","select","hide","lastFocus","optionTop","offsetTop","optionBottom","clientHeight","scrollToTop","scrollToBottom","_typeof","JSON","stringify","lastSelected","console","error","validate","changeEvent","CustomEvent","dispatchEvent","attrValue","parse","e","filterByRegex","search","RegExp","strReg","replace","reg","matches","match","matchIndex","matchValue","toLowerCase","hiddenOptions","chars","MnInput","customElements","define"],"mappings":"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","file":"mn-select.js","sourcesContent":["class MnSelect extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    this.filterString = ''\n    this.tabIndex()\n    this.setMenu()\n    this.setMobile()\n    this.setSelected()\n    this.setOptionEvents()\n    this.setOpenEvents()\n    this.setCloseEvents()\n    this.setFormGetter()\n    this.setValidation()\n    return self\n  }\n\n  tabIndex() {\n    const tabindex = this.getAttribute('tabindex') || '0'\n    this.setAttribute('tabindex', tabindex)\n  }\n\n  setMenu() {\n    const menu = document.createElement('menu')\n    menu.style.transform = 'translate(-19px, -5px)'\n    // inherit from .mn-input\n    this.removeChild(this.querySelector('input'))\n\n    menu.classList.add('mn-card')\n\n    Array\n      .from(this.children)\n      .forEach(child => {\n        // fallback option, some browsers dont support tag option\n        const option = document.createElement('div')\n        option.classList.add('mn-select-option')\n\n        // wrap in a span\n        const text = child\n          .textContent\n          .split('')\n          .map(char => `<span class=\"char\">${char}</span>`)\n          .join('')\n\n        const isDataBinding = /{{.+}}/.test(child.textContent)\n\n        if (isDataBinding) {\n          option.textContent = child.textContent\n        } else {\n          option.innerHTML = text\n        }\n\n        Array\n          .from(child.attributes)\n          .forEach(attr => option.setAttribute(attr.name, attr.value))\n\n        child.parentNode.removeChild(child)\n        menu.appendChild(option)\n      })\n\n    this.insertBefore(menu, this.firstChild)\n    this.menu = menu\n  }\n\n  setMobile() {\n    const options = document.createElement('div')\n    const menu = this.querySelector('menu').cloneNode(true)\n    const cancelButton = document.createElement('button')\n\n    options.classList.add('mn-select-mobile')\n    menu.removeAttribute('class')\n    menu.removeAttribute('style')\n    cancelButton.textContent = 'cancel'\n\n    this.mobile = options\n    options.appendChild(menu)\n    options.appendChild(cancelButton)\n\n    document.body.appendChild(options)\n  }\n\n  setSelected() {\n    const viewValue = document.createElement('div')\n    const selectedOption = this.getAttribute('placeholder')\n      ? this.querySelector('.mn-select-option[selected]')\n      : this.querySelector('.mn-select-option[selected]')\n        || this.querySelector('.mn-select-option')\n\n    if (selectedOption) {\n      const value = selectedOption.getAttribute('value') || selectedOption.textContent\n      this.value = value\n      this.classList.add('has-value')\n      viewValue.textContent = selectedOption.textContent\n    } else if (this.getAttribute('value')) {\n      const value = this.getAttribute('value')\n      this.value = value\n      const option = document.querySelector(`.mn-select-option[value='${value}']`)\n\n      if (option) {\n        viewValue.textContent = option.textContent\n      }\n    }\n\n    this.insertBefore(viewValue, this.firstChild)\n  }\n\n  setOptionEvents() {\n    const options = Array.from(this.querySelectorAll('.mn-select-option'))\n    const mobile = Array.from(this.mobile.querySelectorAll('.mn-select-option'))\n    const _this = this\n\n    options\n      .concat(mobile)\n      .forEach(option => option.addEventListener('click', clickToSelect))\n\n    options\n      .forEach(option => option.addEventListener('mousemove', focusOption))\n\n    document.addEventListener('keydown', arrowNavigate)\n    document.addEventListener('keydown', enterToSelect)\n    document.addEventListener('keydown', characterFilter)\n\n    function clickToSelect(event) {\n      const value = event.target.getAttribute('value') || event.target.textContent\n      _this.value = value\n      _this.close()\n    }\n\n    function focusOption(event) {\n      if (_this.classList.contains('arrow-key')) {\n        _this.classList.remove('arrow-key')\n      } else {\n        _this.focusIn(event.target)\n      }\n    }\n\n    function arrowNavigate(event) {\n      const isArrowKey = event.key === 'ArrowDown' || event.key === 'ArrowUp'\n      const elementIsVisible = _this.classList.contains('visible')\n\n      if (isArrowKey && elementIsVisible) {\n        const items = Array\n          .from(_this.menu.children)\n          .filter(item => {\n            return !item.classList.contains('hidden')\n          })\n\n        const index = items.indexOf(_this.querySelector('.mn-select-option.focus'))\n\n        const nextIndex = event.key === 'ArrowDown' && index < items.length\n          ? index + 1\n          : event.key === 'ArrowUp' && index > 0\n            ? index - 1\n            : 0\n\n        const nextFocusable = items[nextIndex]\n\n        if (isArrowKey && nextFocusable) {\n          _this.focusIn(nextFocusable)\n          event.stopPropagation()\n          event.preventDefault()\n        }\n      }\n    }\n\n    function enterToSelect(event) {\n      const isEnterKey = event.key === 'Enter'\n      const elementIsVisible = _this.classList.contains('visible')\n      const option = _this.menu.querySelector('.focus')\n\n      if (isEnterKey && elementIsVisible && option) {\n        const value = option.getAttribute('value') || option.textContent\n        _this.value = value\n        _this.close()\n      }\n    }\n\n    function characterFilter(event) {\n      const isCharacter = event.key.length === 1 && event.key !== ' '\n      const elementIsVisible = _this.classList.contains('visible')\n\n      if (isCharacter && elementIsVisible) {\n        _this.filterString += event.key\n        _this.filter = _this.filterString\n      }\n    }\n  }\n\n  setOpenEvents() {\n    const _this = this\n    this.addEventListener('click', clickToOpen)\n    this.addEventListener('keydown', enterOrSpaceToOpen)\n\n    function clickToOpen() {\n      const elementIsVisible = _this.classList.contains('visible')\n      !elementIsVisible && _this.open()\n    }\n\n    function enterOrSpaceToOpen(event) {\n      const isEnterOrSpaceKey = event.key === 'Enter'\n        || event.key === ' '\n      const elementIsVisible = _this.classList.contains('visible')\n\n      if (isEnterOrSpaceKey && !elementIsVisible) {\n        _this.open()\n        event.preventDefault()\n        event.stopPropagation()\n      }\n    }\n  }\n\n  setCloseEvents() {\n    this.addEventListener('focus', () => this.close())\n    this.mobile.querySelector('button').addEventListener('click', () => this.close())\n    this.mobile.addEventListener('click', event => {\n      if (event.target.classList.contains('mn-select-mobile')) {\n        this.close()\n      }\n    })\n\n    document.addEventListener('keydown', event => {\n      const hasFilter = this.filterString\n      const isOpened = this.classList.contains('visible')\n\n      if (isOpened) {\n        if (event.key === 'Backspace') {\n          this.filterString = this.filterString.slice(0, -1)\n          this.filter = this.filterString\n        }\n\n        if (event.key === 'Tab') {\n          this.close()\n        }\n\n        if (event.key === 'Escape') {\n          if (hasFilter) {\n            this.filter = undefined\n          } else {\n            this.close()\n          }\n        }\n      }\n    })\n\n    document.addEventListener('click', event => {\n      const elementIsVisible = this.classList.contains('visible')\n      const clickOutside = !event.target.closest('mn-select')\n      const selectOption = event.target.classList.contains('mn-select-option')\n      if (elementIsVisible && clickOutside || selectOption) {\n        this.close()\n      }\n    })\n  }\n\n  setFormGetter() {\n    const form = this.closest('form')\n    const name = this.getAttribute('name')\n    const element = this\n\n    if (form && name) {\n      Object.defineProperty(form, name, {get: () => element})\n    }\n  }\n\n  setValidation() {\n    const required = this.getAttribute('required')\n    if (required) {\n      const input = document.createElement('input')\n      input.setAttribute('required', 'required')\n      input.setAttribute('name', this.getAttribute('name') || this.id)\n      input.style.visibility = 'hidden'\n      input.style.position = 'absolute'\n      this.appendChild(input)\n    }\n  }\n\n  set value(value) {\n    value = typeof value === 'object'\n      ? JSON.stringify(value)\n      : value\n\n    const option = this.querySelector(`.mn-select-option[value='${value}']`)\n    const input = this.querySelector('input')\n\n    if (option) {\n      const viewValue = this.querySelector('div:not(.mn-select-option)')\n      viewValue\n        ? viewValue.textContent = option.textContent\n        : null\n      if (input) {\n        input.value = value\n      }\n      this.classList.add('has-value')\n      const lastSelected = option.parentNode.querySelector('.mn-select-option[selected]')\n\n      if (lastSelected) {\n        lastSelected.removeAttribute('selected')\n      }\n      option.setAttribute('selected', 'selected')\n    } else {\n      console.error(`MN-SELECT OPTION_UNDEFINED\n        You're trying set a value (${value}) to mn-select,\n        but there is no option with this value to be displayed`)\n    }\n\n    this.validate()\n    const changeEvent = new CustomEvent('change', {value})\n    this.dispatchEvent(changeEvent)\n    this.setAttribute('value', value)\n  }\n\n  get value() {\n    // return evaluate(this.getAttribute('value')) || undefined\n    let attrValue\n\n    try {\n      attrValue = this.getAttribute('value')\n        ? JSON.parse(this.getAttribute('value'))\n        : this.getAttribute('value')\n    } catch (e) {\n      attrValue = this.getAttribute('value')\n    }\n\n    return attrValue || undefined\n  }\n\n  set filter(value) {\n    if (value) {\n      this.classList.add('filtered')\n      this.filterString = value\n      const options = Array.from(this.menu.querySelectorAll('.mn-select-option'))\n      options.forEach(option => {\n        const matchOption = filterByRegex(value, option.textContent)\n\n        if (matchOption) {\n          option.classList.remove('hidden')\n          const strReg = value\n              .split('')\n              .join('.*')\n              .replace(/(\\w(?:\\.\\*)?)/g, '($1)')\n          const reg = new RegExp(strReg, 'i')\n          const matches = option.textContent.match(reg)\n          const chars = Array.from(option.querySelectorAll('span'))\n\n          chars\n            .forEach((char, index) => {\n              const matchIndex = index >= matches.index\n              const matchValue = value.toLowerCase().search(char.textContent.toLowerCase()) >= 0\n\n              if (matchIndex && matchValue) {\n                char.classList.add('filter-match')\n              } else {\n                char.classList.remove('filter-match')\n              }\n            })\n          value.split('')\n        } else {\n          option.classList.add('hidden')\n        }\n      })\n    } else {\n      this.classList.remove('filtered')\n      this.filterString = ''\n      const hiddenOptions = Array.from(this.querySelectorAll('.mn-select-option.hidden'))\n      const chars = Array.from(this.querySelectorAll('.mn-select-option span.filter-match'))\n      hiddenOptions.forEach(option => option.classList.remove('hidden'))\n      chars.forEach(char => char.classList.remove('filter-match'))\n    }\n\n    this.focusIn(this.querySelector('.mn-select-option:not(.hidden)'))\n\n    function filterByRegex(search, value) {\n      const reg = new RegExp(search.split('').join('.*'), 'i')\n      return reg.test(value)\n    }\n  }\n\n  get filter() {\n    return this.filterString || undefined\n  }\n\n  open() {\n    this.close()\n    this.menu.scrollTop = 0\n    this.classList.add('visible')\n    this.mobile.classList.add('visible')\n    document.body.classList.add('mn-select-visible')\n    window.MnBackdrop.show()\n    this.focusIn(this.querySelector('.mn-select-option'))\n  }\n\n  close() {\n    const select = document.querySelector('mn-select.visible')\n\n    if (select) {\n      select.classList.remove('visible')\n      select.filter = undefined\n      select.mobile.classList.remove('visible')\n      document.body.classList.remove('mn-select-visible')\n      window.MnBackdrop.hide()\n    }\n  }\n\n  focusIn(option) {\n    if (option && !option.classList.contains('focus')) {\n      const lastFocus = this.querySelector('.mn-select-option.focus')\n      lastFocus && lastFocus.classList.remove('focus')\n      option.classList.add('focus')\n\n      const optionTop = option.offsetTop\n      const optionBottom = optionTop + option.clientHeight\n\n      const scrollToTop = optionTop < this.menu.scrollTop\n      const scrollToBottom = optionBottom > this.menu.scrollTop + this.menu.clientHeight\n\n      this.classList.add('arrow-key')\n      if (scrollToTop) {\n        this.menu.scrollTop = optionTop\n      } else if (scrollToBottom) {\n        this.menu.scrollTop = optionBottom - this.menu.clientHeight\n      }\n    }\n  }\n}\n\nwindow.customElements.define('mn-select', MnSelect)\n\n"]}